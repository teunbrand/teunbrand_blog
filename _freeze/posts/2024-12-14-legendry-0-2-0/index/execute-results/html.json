{
  "hash": "bbd0b436cf61dbb75306ba8cc26b7208",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"On bubbles and trees\"\ndescription: \"Announcing two more guides joining the family.\"\nauthor: \"Teun van den Brand\"\ndate: \"2024-12-14\"\nimage: \"pexels-hert-3224164-smaller.jpg\"\ncode-fold: true\ncategories: [package, update]\n---\n\n\n\nI now have the awkward pride of announcing a fresh update to an already new package, barely a month after its release.\nOn the one hand I did a little bit of future-proofing, hopefully preventing it from being kicked out of CRAN in the next half year.\nOn the other hand, I also developed a few features that I'm excited to share!\n\n\n\n\n\n\n\n## Bubbles\n\nThe first thing I'd like to parade around is a new standalone guide for the `size` aesthetic.\nThe `guide_circles()` function lets you build a guide that displays the size of points as a series of rings.\nSimultaneously is source of frustration, but also a neat thing is that this guide uses actual points drawn by the layer glyph function.\nTaking the correct measurements of points and aligning them was a bit fussy to develop, but at least for circular points, it should work as you'd expect!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(legendry)\n#> Loading required package: ggplot2\n\ngapminder::gapminder |>\n  dplyr::filter(year == max(year)) |>\n  ggplot(aes(gdpPercap, lifeExp, size = pop, fill = continent)) +\n  geom_point(shape = 21) +\n  scale_size_area(\n    # Note that we need irregular breaks because we scale area, not radius\n    limits = c(0, NA), max_size = 20,\n    breaks = c(0, 100, 500, 1000)*1e6,\n    labels = c(0, \"100M\", \"500M\", \"1B\"),\n    guide  = guide_circles(vjust = 1)\n  ) +\n  scale_x_log10() +\n  labs(\n    x = \"GDP per capita\",\n    y = \"Life expectancy\",\n    fill = \"Continent\",\n    size = \"Population\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\nI hasten to mention that I'm not the first to develop such a guide, but I think that this is the first version that is implemented as a ggplot2 guide. See [scatterpie](https://cran.r-project.org/web/packages/scatterpie/vignettes/scatterpie.html) or [mapsf](https://riatelab.github.io/mapsf/#usage) for other implementations.\n\n## Trees\n\nThe next addition in this release is a guide for dendrograms. \nThere are plenty of better packages to plot dendrograms for the sake of dendrograms, like [dendextend](https://cran.r-project.org/package=dendextend).\nInstead, legendry now has a new scale/guide pair whose job it is to display dendrograms as axis annotations.\nI've personally enjoyed these annotations in combination with heatmaps.\n\nThe new scales `scale_x_dendro()` and `scale_y_dendro()` accept a `<hclust>` object generated from the eponymous function.\nThe scale itself just ensure that discrete categories are sorted by the dendrogram order.\n\nIt is the guide that comes with these scales, `guide_axis_dendro()` that does the heavy lifting of actually displaying the dendrogram.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncar_cor <- cor(t(mtcars), method = \"spearman\")\ncar_clusters <- hclust(as.dist(1 - car_cor))\n\ndata <- reshape2::melt(car_cor)\n\np <- ggplot(data, aes(Var1, Var2, fill = value)) +\n  geom_tile() +\n  scale_fill_viridis_c() +\n  scale_x_dendro(car_clusters, guide = guide_axis_dendro(labels = FALSE)) +\n  scale_y_dendro(car_clusters) +\n  labs(x = \"Cars\", y = \"Cars\", fill = expression(rho^2)) +\n  guides(x.sec = guide_axis(angle = 90))\n\np + coord_fixed()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nYou may correctly point out that a similar thing already exists in the ggh4x package.\nThe primary difference is that `guide_axis_dendro()` uses legendry's gimmicks, such as [composed guides](https://teunbrand.github.io/legendry/articles/guide_composition.html).\nThis implies both that it is build on the newer guide system introduced in ggplot2 3.5.0 and that it works well with `coord_radial()`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mtcars, aes(rownames(mtcars), mpg)) +\n  geom_col(width = 1) +\n  coord_radial(inner.radius = 0.5, expand = FALSE) +\n  labs(x = NULL, y = NULL) +\n  scale_x_dendro(car_clusters) +\n  guides(\n    theta = guide_axis_base(angle = 90),\n    theta.sec = guide_axis_dendro(labels = FALSE),\n    r = \"none\"\n  ) +\n  theme(plot.margin = margin(t = 50, b = 50))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nIn one of the *very* rare cases that a secondary theta axis can be useful, the dendrogram guide can be placed in the center of polar plots.\nThese shennanigans make it easy to create visualisation like radiating [phylogenetic trees](https://commons.wikimedia.org/wiki/File:Phylogenetic_Tree_of_Life.png).\n\nWith all of that wrapped up, all that is left is wishing you all happy holidays!\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Session info\"}\nsi <- sessioninfo::session_info()\n# Deidentifying paths on my personal machine\nsi$packages$library <- NULL\nsi$platform$pandoc <- NULL\nprint(si)\n#> ─ Session info ───────────────────────────────────────────────────────────────\n#>  setting  value\n#>  version  R version 4.4.2 (2024-10-31 ucrt)\n#>  os       Windows 11 x64 (build 22631)\n#>  system   x86_64, mingw32\n#>  ui       RTerm\n#>  language (EN)\n#>  collate  English_Netherlands.utf8\n#>  ctype    English_Netherlands.utf8\n#>  tz       Europe/Amsterdam\n#>  date     2024-12-14\n#> \n#> ─ Packages ───────────────────────────────────────────────────────────────────\n#>  package     * version  date (UTC) lib source\n#>  cli           3.6.3    2024-06-21 []  CRAN (R 4.4.1)\n#>  colorspace    2.1-1    2024-07-26 []  CRAN (R 4.4.1)\n#>  digest        0.6.37   2024-08-19 []  CRAN (R 4.4.1)\n#>  dplyr         1.1.4    2023-11-17 []  CRAN (R 4.4.0)\n#>  evaluate      1.0.1    2024-10-10 []  CRAN (R 4.4.1)\n#>  fansi         1.0.6    2023-12-08 []  CRAN (R 4.4.0)\n#>  farver        2.1.2    2024-05-13 []  CRAN (R 4.4.0)\n#>  fastmap       1.2.0    2024-05-15 []  CRAN (R 4.4.0)\n#>  gapminder     1.0.0    2023-03-10 []  CRAN (R 4.4.1)\n#>  generics      0.1.3    2022-07-05 []  CRAN (R 4.4.0)\n#>  ggplot2     * 3.5.1    2024-04-23 []  CRAN (R 4.4.2)\n#>  glue          1.8.0    2024-09-30 []  CRAN (R 4.4.1)\n#>  gtable        0.3.6    2024-10-25 []  CRAN (R 4.4.1)\n#>  htmltools     0.5.8.1  2024-04-04 []  CRAN (R 4.4.0)\n#>  htmlwidgets   1.6.4    2023-12-06 []  CRAN (R 4.4.0)\n#>  jsonlite      1.8.9    2024-09-20 []  CRAN (R 4.4.1)\n#>  knitr         1.49     2024-11-08 []  CRAN (R 4.4.2)\n#>  labeling      0.4.3    2023-08-29 []  CRAN (R 4.4.0)\n#>  legendry    * 0.2.0    2024-12-14 []  local\n#>  lifecycle     1.0.4    2023-11-07 []  CRAN (R 4.4.0)\n#>  magrittr      2.0.3    2022-03-30 []  CRAN (R 4.4.0)\n#>  munsell       0.5.1    2024-04-01 []  CRAN (R 4.4.0)\n#>  pillar        1.9.0    2023-03-22 []  CRAN (R 4.4.0)\n#>  pkgconfig     2.0.3    2019-09-22 []  CRAN (R 4.4.0)\n#>  plyr          1.8.9    2023-10-02 []  CRAN (R 4.4.0)\n#>  R6            2.5.1    2021-08-19 []  CRAN (R 4.4.0)\n#>  ragg          1.3.3    2024-09-11 []  CRAN (R 4.4.1)\n#>  Rcpp          1.0.13-1 2024-11-02 []  CRAN (R 4.4.2)\n#>  reshape2      1.4.4    2020-04-09 []  CRAN (R 4.4.0)\n#>  rlang         1.1.4    2024-06-04 []  CRAN (R 4.4.0)\n#>  rmarkdown     2.29     2024-11-04 []  CRAN (R 4.4.2)\n#>  rstudioapi    0.17.1   2024-10-22 []  CRAN (R 4.4.1)\n#>  scales        1.3.0    2023-11-28 []  CRAN (R 4.4.2)\n#>  sessioninfo   1.2.2    2021-12-06 []  CRAN (R 4.4.0)\n#>  stringi       1.8.4    2024-05-06 []  CRAN (R 4.4.0)\n#>  stringr       1.5.1    2023-11-14 []  CRAN (R 4.4.0)\n#>  systemfonts   1.1.0    2024-05-15 []  CRAN (R 4.4.0)\n#>  textshaping   0.4.1    2024-12-06 []  CRAN (R 4.4.2)\n#>  tibble        3.2.1    2023-03-20 []  CRAN (R 4.4.0)\n#>  tidyselect    1.2.1    2024-03-11 []  CRAN (R 4.4.0)\n#>  utf8          1.2.4    2023-10-22 []  CRAN (R 4.4.0)\n#>  vctrs         0.6.5    2023-12-01 []  CRAN (R 4.4.0)\n#>  viridisLite   0.4.2    2023-05-02 []  CRAN (R 4.4.0)\n#>  withr         3.0.2    2024-10-28 []  CRAN (R 4.4.1)\n#>  xfun          0.49     2024-10-31 []  CRAN (R 4.4.1)\n#>  yaml          2.3.10   2024-07-26 []  CRAN (R 4.4.1)\n#> \n#> \n#> ──────────────────────────────────────────────────────────────────────────────\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}